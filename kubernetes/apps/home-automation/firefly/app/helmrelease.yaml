---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app firefly
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      firefly:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: firefly-secret
        containers:
          app:
            image:
              repository: fireflyiii/core
              tag: version-6.1.21
            resources:
              requests:
                cpu: 500m
                memory: 500Mi
              limits:
                memory: 2000Mi
            probes:
              startup:
                enabled: false
              liveness:
                enabled: true
              readiness:
                enabled: true
            env:
              TZ: America/Chicago
              APP_URL: "https://money.${SECRET_DOMAIN}"
              APP_ENV: production
              TRUSTED_PROXIES: "**"
              COOKIE_DOMAIN: "${SECRET_DOMAIN}"
              COOKIE_SECURE: true
              COOKIE_SAMESITE: lax
              # AUTHENTICATION_GUARD: remote_user_guard
              # AUTHENTICATION_GUARD_HEADER:
              # AUTHENTICATION_GUARD_EMAIL:
            envFrom: *envFrom
          # cronjob:
          #   image:
          #     repository: alpine
          #     tag: 3.20.2
          #     pullPolicy: IfNotPresent
          #   command:
          #     - sh
          #   args:
          #     - -c
          #     - >-
          #       echo "0 */3 * * * wget -qO- http://firefly:8080/api/v1/cron/$(STATIC_CRON_TOKEN)"
          #       | crontab -
          #       && crond -f -L /dev/stdout
          #   env:
          #     - name: STATIC_CRON_TOKEN
          #       valueFrom:
          #         secretKeyRef:
          #           name: firefly-secret
          #           key: STATIC_CRON_TOKEN
        # initContainers:
        #   init-db:
        #     image:
        #       repository: alpine
        #       tag: 3.20.2
        #       pullPolicy: IfNotPresent
        #     command:
        #       - sh
        #     args:
        #       - -c
        #       - >-
        #         until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
        #         do echo "Waiting for database";
        #         done
        #     env:
        #       - name: POSTGRES_HOST
        #         valueFrom:
        #           secretKeyRef:
        #             name: pgo-cluster-pguser-fireflyiii
        #             key: host
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8080
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "money.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        storageClass: ceph-block
        size: 20Gi
        accessMode: ReadWriteOnce
        advancedMounts:
          firefly:
            app:
              - path: /var/www/html/storage/upload
