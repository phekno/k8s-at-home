---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: sha256-a9f405688344a8a6f718e2c344438342ad21540986aeb5ab5fa781831eb2c597
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret
        containers:
          app:
            image:
<<<<<<< HEAD
              repository: ghcr.io/phekno/radarr-develop
              tag: 5.20.1.9773@sha256:af5b70f3ce1fd0b265546189d8bfc7973d8ef3553d1f8bc1f67f2f35b6cc016b
=======
              repository: ghcr.io/home-operations/radarr
              tag: sha256-e23ae79f0c88aa988aacaf9df34cf626632bed0205c51e7ba34bcc508d2f38a6.sig
>>>>>>> 674d675 (updates to home-operations images)
            env:
              TZ: "${TIMEZONE}"
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              RADARR__LOG_LEVEL: debug
              RADARR__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 30
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                memory: 2Gi
              limits:
                memory: 16Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: ceph-block
        size: 10Gi
        accessMode: ReadWriteOnce
      tmp:
        type: emptyDir
      media:
        enabled: true
        type: nfs
        server: 10.100.50.5
        path: /tank/video
      downloads:
        enabled: true
        type: nfs
        server: 10.100.50.5
        path: /tank/nzbget_downloads
        globalMounts:
          - path: /config/Downloads
