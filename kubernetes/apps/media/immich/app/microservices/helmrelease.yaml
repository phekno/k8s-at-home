---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-microservices
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: immich-server
    - name: immich-redis
  values:
    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    controllers:
      immich-microservices:
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.112.1
            args:
              - start-microservices.sh
            envFrom:
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
            resources:
              requests:
                cpu: 100m
                memory: 1000Mi
              limits:
                memory: 6000Mi
    service:
      app:
        controller: *app
        enabled: false
    persistence:
      library:
        type: persistentVolumeClaim
        existingClaim: immich
        globalMounts:
          - path: /usr/src/app/upload
      geocoding-dump:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump
      geoname-dump:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/node_modules/local-reverse-geocoder/geonames_dump
      transformers-cache:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.transformers_cache
